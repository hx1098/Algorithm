star法则:

status:
    又是一个周三，快要下班了，老大突然又拉住我，喜滋滋的告诉我“牛叉公司很满意我们做的模型，
    又签订了一个合同，把奔驰、宝马的车辆模型都交给我我们公司制作了，不过这次又额外增加了一个新需
    求：汽车的启动、停止、喇叭声音、引擎声音都有客户自己控制，他想什么顺序就什么顺序，这个没问题
    吧?”。

task:
    情况就是这样的情况, 所以你先要创建出基本的类, 和对应不同的构造器出来才行.

action:
    1.CarModel 是所有造车的关键, 是所有车的基础
        2.BencModel 和 BmwModel 这两个个是写着玩的, 传统的造车, 比较麻烦的步骤
    3.CarBuilder 是所哟丶累的建造者, 提供的是一个 返回车辆的接口, 和 一个设置启动顺序的接口,子类主要拉实现它就行了.
    4.BmwBuilder 和 BenzBuilder 来继承并实现 CarBuilder, 用以传入顺序, 来生产车辆
    5.Client 用户交付就可以了
result:
    实现用户的车辆交付,
