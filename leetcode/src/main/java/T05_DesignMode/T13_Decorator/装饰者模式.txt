star法则:

status:
    是在没想好, 按照作者的的小故事来说说装饰者模式吧
    上小学的的糗事吧。我上小学的时候学习
    成绩非常的差，班级上 40 多个同学，我基本上都是在排名 45 名以后，按照老师给我的定义就是“不是读
    书的料”，但是我老爸管的很严格，明知道我不是这块料，还是往赶鸭子上架，每次考试完毕我都是战战兢
    兢的，“竹笋炒肉”是肯定少不了的，能少点就少点吧，肉可是自己的呀。四年级期末考试考完，学校出来
    个很损的招儿（这招儿现在很流行的），打印出成绩单，要家长签字，然后才能上五年级，我那个恐惧呀，
    不过也就是几秒钟的时间，玩起来什么都忘记了

    就这成绩还要我签字？！老爸就开始找笤帚，我的屁股已经做好了准备，肌肉要绷紧，要不那个太疼了！哈
    哈，幸运的是，这个不是当时的真实情况，我没有直接把成绩单交给老爸，而是在交给他之前做了点技术工作，
    我要把成绩单封装一下，封装分类两步走：
    第一步:跟老爸说各个科目的最高分，语文最高是 75，数学是 78，自然是 80，然老爸觉的我成绩与最高分
    数相差不多，这个是实情，但是不知道是什么原因，反正期末考试都考的不怎么样，但是基本上都集中在 70 分
    以上，我这 60 多分基本上还是垫底的角色；
    第二步：在老爸看成绩单后，告诉他我是排名第 38 名，全班，这个也是实情，为啥呢？有将近十个同学退
    学了！这个情况我是不说的。不知道是不是当时第一次发成绩单，学校没有考虑清楚，没有写上总共有多少同学，
    排名第几名等等，反正是被我钻了个空子。

    通过继承确实能够解决这个问题，老爸看成绩单很开心，然后就给签字了，但是现实的情况很复杂的，可能
    老爸听我汇报最高成绩后，就直接乐开花了，直接签名了，后面的排名就没必要了，或者老爸要先听排名情况，
    那怎么办？继续扩展类？你能扩展多少个类？这还是一个比较简单的场景，一旦需要装饰的条件非常的多，比如
    20 个，你还通过继承来解决，你想想的子类有多少个？你是不是马上就要崩溃了！
    好，你也看到通过继承情况确实出现了问题，类爆炸，类的数量激增，光写这些类不累死你才怪，而且还要
    想想以后维护怎么办，谁愿意接收这么一大堆类的维护哪？并且在面向对象的设计中，如果超过 2 层继承，你就
    应该想想是不是出设计问题了，是不是应该重新找一条道了，这是经验值，不是什么绝对的，继承层次越多你以
    后的维护成本越多，问题这么多，那怎么办？好办，装饰模式出场来解决这些问题,
    增加一个抽象类和两个实现类，其中 Decorator 的作用是封装 SchoolReport 类，看源代码：

task:




action:


result: