star法则:

status:
    我很忙, 根本没空理你, 所以我就找一个代理人, 我跟代理人说明好我可以干什么, 不可以干什么, 然后让我的代理人来进行和你协商

task:
    我可以给你钱, 可以打地下城(让被代理人代打), 还可以开车.

action:
    找一个代理人, 代理人去做各种各样的事情

result:
    让我的地下城账号升到90级, 毕业, 或者代驾把车开到了我家了.


思路:
  比如西门庆找潘金莲，那潘金莲不好意思答复呀，咋办，找那个王婆做代理吧


###jdk动态代理和cglib代理的模式区别

//JDK是采用读取接口的信息
            //CGLib覆盖父类方法
            //目的：都是生成一个新的类，去实现增强代码逻辑的功能

            //JDK Proxy 对于用户而言，必须要有一个接口实现，目标类相对来说复杂
            //CGLib 可以代理任意一个普通的类，没有任何要求

            //CGLib 生成代理逻辑更复杂，效率,调用效率更高，生成一个包含了所有的逻辑的FastClass，不再需要反射调用
            //JDK Proxy生成代理的逻辑简单，执行效率相对要低，每次都要反射动态调用

            //CGLib 有个坑，CGLib不能代理final的方法











